name: Build and Push Docker Images

on:
  push:
    branches:
      - main
  pull_request:
    types: [closed]
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-push:
    if: (github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)) && github.actor != 'github-actions[bot]'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Bump version and create tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: main
          default_bump: patch
          tag_prefix: v

      - name: Configure git safe directory
        if: steps.tag_version.outputs.new_tag != ''
        run: git config --global --add safe.directory $GITHUB_WORKSPACE

      - name: Prepare image tags
        id: prepare_tags
        run: |
          FE_TAGS="lycohana/todos-frontend:latest"
          BE_TAGS="lycohana/todos-backend:latest"
          if [ -n "${{ steps.tag_version.outputs.new_tag }}" ]; then
            FE_TAGS="$FE_TAGS"$'\n'"lycohana/todos-frontend:${{ steps.tag_version.outputs.new_tag }}"
            BE_TAGS="$BE_TAGS"$'\n'"lycohana/todos-backend:${{ steps.tag_version.outputs.new_tag }}"
          fi
          echo "TAGS_FE<<EOF" >> $GITHUB_ENV
          echo "$FE_TAGS" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          echo "TAGS_BE<<EOF" >> $GITHUB_ENV
          echo "$BE_TAGS" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./frontend.Dockerfile
          push: true
          tags: ${{ env.TAGS_FE }}

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./backend.Dockerfile
          push: true
          tags: ${{ env.TAGS_BE }}

      - name: Prepare global git config for Docker actions
        run: |
          printf "[safe]\n\tdirectory = /github/workspace\n" > $GITHUB_WORKSPACE/.gitconfig

      - name: Generate Changelog for new tag
        id: gen_changelog
        if: steps.tag_version.outputs.new_tag != '' && steps.tag_version.outputs.previous_tag != ''
        uses: scottbrenner/generate-changelog-action@master
        continue-on-error: true
        env:
          GIT_CONFIG_GLOBAL: /github/workspace/.gitconfig
        with:
          from-tag: ${{ steps.tag_version.outputs.previous_tag }}
          to-tag: ${{ steps.tag_version.outputs.new_tag }}

      - name: Create CHANGELOG.md from outputs
        if: steps.tag_version.outputs.new_tag != ''
        run: |
          CONTENT="${{ steps.gen_changelog.outputs.changelog }}"
          if [ -z "$CONTENT" ]; then
            CONTENT="${{ steps.tag_version.outputs.changelog }}"
          fi
          echo "# Changelog" > CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "## ${{ steps.tag_version.outputs.new_tag }}" >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          printf "%s\n" "$CONTENT" >> CHANGELOG.md

      - name: Handle potential conflicts and commit CHANGELOG.md
        if: steps.tag_version.outputs.new_tag != ''
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          # Check if there are any conflicts or uncommitted changes
          if git diff --quiet && git diff --staged --quiet; then
            echo "No changes to commit"
          else
            # Add the CHANGELOG.md file
            git add CHANGELOG.md
            
            # Try to pull latest changes
            git fetch origin main
            
            # Check if we're behind
            if ! git merge-base --is-ancestor origin/main HEAD; then
              echo "Local branch is behind remote, attempting to merge"
              git merge origin/main --no-edit || {
                echo "Merge conflict detected, resolving by keeping our CHANGELOG.md"
                git checkout --ours CHANGELOG.md
                git add CHANGELOG.md
                git commit -m "docs(changelog): update for ${{ steps.tag_version.outputs.new_tag }} [skip ci]"
              }
            fi
            
            # Commit if there are staged changes
            if ! git diff --staged --quiet; then
              git commit -m "docs(changelog): update for ${{ steps.tag_version.outputs.new_tag }} [skip ci]"
            fi
            
            # Push the changes
            git push origin main
          fi

      - name: Create GitHub Release
        if: steps.tag_version.outputs.new_tag != ''
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: ${{ steps.tag_version.outputs.new_tag }}
          bodyFile: CHANGELOG.md
          draft: false
          prerelease: false
